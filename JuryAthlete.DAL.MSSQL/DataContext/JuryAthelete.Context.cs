//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JuryAthlete.DAL.MSSQL.DataContext
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AthleteJuryEntities : DbContext
    {
        public AthleteJuryEntities()
            : base("name=AthleteJuryEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<t_annonces> t_annonces { get; set; }
        public virtual DbSet<t_batches> t_batches { get; set; }
        public virtual DbSet<t_brevets> t_brevets { get; set; }
        public virtual DbSet<t_catalogue> t_catalogue { get; set; }
        public virtual DbSet<t_clubs> t_clubs { get; set; }
        public virtual DbSet<t_competitions> t_competitions { get; set; }
        public virtual DbSet<t_competitions_officiels> t_competitions_officiels { get; set; }
        public virtual DbSet<t_compteurvisites> t_compteurvisites { get; set; }
        public virtual DbSet<t_convocations> t_convocations { get; set; }
        public virtual DbSet<t_convocations_demandes> t_convocations_demandes { get; set; }
        public virtual DbSet<t_convocations_epreuves> t_convocations_epreuves { get; set; }
        public virtual DbSet<t_convocations_officiels> t_convocations_officiels { get; set; }
        public virtual DbSet<t_documents_admin> t_documents_admin { get; set; }
        public virtual DbSet<t_download> t_download { get; set; }
        public virtual DbSet<t_epreuves> t_epreuves { get; set; }
        public virtual DbSet<t_formations> t_formations { get; set; }
        public virtual DbSet<t_history> t_history { get; set; }
        public virtual DbSet<t_historylogin> t_historylogin { get; set; }
        public virtual DbSet<t_mailinglist> t_mailinglist { get; set; }
        public virtual DbSet<t_md_ddlb> t_md_ddlb { get; set; }
        public virtual DbSet<t_md_provinces> t_md_provinces { get; set; }
        public virtual DbSet<t_md_saisons> t_md_saisons { get; set; }
        public virtual DbSet<t_md_status> t_md_status { get; set; }
        public virtual DbSet<t_md_status_compet> t_md_status_compet { get; set; }
        public virtual DbSet<t_md_status_rel> t_md_status_rel { get; set; }
        public virtual DbSet<t_md_tailles> t_md_tailles { get; set; }
        public virtual DbSet<t_md_typecompet> t_md_typecompet { get; set; }
        public virtual DbSet<t_md_typecompet_province> t_md_typecompet_province { get; set; }
        public virtual DbSet<t_membres> t_membres { get; set; }
        public virtual DbSet<t_membres_acces> t_membres_acces { get; set; }
        public virtual DbSet<t_membres_declarations> t_membres_declarations { get; set; }
        public virtual DbSet<t_membres_documents> t_membres_documents { get; set; }
        public virtual DbSet<t_membres_requests> t_membres_requests { get; set; }
        public virtual DbSet<t_menu_left> t_menu_left { get; set; }
        public virtual DbSet<t_messages> t_messages { get; set; }
        public virtual DbSet<t_messages_files> t_messages_files { get; set; }
        public virtual DbSet<t_messages_recipients> t_messages_recipients { get; set; }
        public virtual DbSet<t_news> t_news { get; set; }
        public virtual DbSet<t_officiels> t_officiels { get; set; }
        public virtual DbSet<t_officiels_declarations> t_officiels_declarations { get; set; }
        public virtual DbSet<t_officiels_disponibilites> t_officiels_disponibilites { get; set; }
        public virtual DbSet<t_officiels_disponibilites_exceptions> t_officiels_disponibilites_exceptions { get; set; }
        public virtual DbSet<t_officiels_meritants> t_officiels_meritants { get; set; }
        public virtual DbSet<t_officiels_roles> t_officiels_roles { get; set; }
        public virtual DbSet<t_parametres> t_parametres { get; set; }
        public virtual DbSet<t_pays> t_pays { get; set; }
        public virtual DbSet<t_quiz_answers> t_quiz_answers { get; set; }
        public virtual DbSet<t_quiz_history> t_quiz_history { get; set; }
        public virtual DbSet<t_quiz_history_tests> t_quiz_history_tests { get; set; }
        public virtual DbSet<t_quiz_questions> t_quiz_questions { get; set; }
        public virtual DbSet<t_roles> t_roles { get; set; }
        public virtual DbSet<t_sites> t_sites { get; set; }
        public virtual DbSet<t_sondage_answers> t_sondage_answers { get; set; }
        public virtual DbSet<t_sondage_ipaddress> t_sondage_ipaddress { get; set; }
        public virtual DbSet<t_sondage_questions> t_sondage_questions { get; set; }
        public virtual DbSet<t_sorties_club> t_sorties_club { get; set; }
        public virtual DbSet<t_sorties_participants> t_sorties_participants { get; set; }
        public virtual DbSet<t_sorties_voyages> t_sorties_voyages { get; set; }
        public virtual DbSet<t_test_xls> t_test_xls { get; set; }
        public virtual DbSet<t_transactions> t_transactions { get; set; }
        public virtual DbSet<vw_Jubilaires> vw_Jubilaires { get; set; }
        public virtual DbSet<vw_ListeDesCompétitionsFutures> vw_ListeDesCompétitionsFutures { get; set; }
        public virtual DbSet<vw_ListeDesOfficielsDeBruxelles> vw_ListeDesOfficielsDeBruxelles { get; set; }
        public virtual DbSet<vw_ListeDesOfficielsDeBruxellesAncien> vw_ListeDesOfficielsDeBruxellesAncien { get; set; }
        public virtual DbSet<vw_OfficielBruxellesFull> vw_OfficielBruxellesFull { get; set; }
    
        public virtual ObjectResult<usp_GetOfficielsByCompetition_Result> usp_GetOfficielsByCompetition(Nullable<int> competitionId)
        {
            var competitionIdParameter = competitionId.HasValue ?
                new ObjectParameter("competitionId", competitionId) :
                new ObjectParameter("competitionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetOfficielsByCompetition_Result>("usp_GetOfficielsByCompetition", competitionIdParameter);
        }
    
        public virtual ObjectResult<usp_OfficielsMeritantsList_Result> usp_OfficielsMeritantsList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_OfficielsMeritantsList_Result>("usp_OfficielsMeritantsList");
        }
    
        public virtual ObjectResult<usp_PlannedBenefits_Result> usp_PlannedBenefits(Nullable<int> year, Nullable<int> month)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PlannedBenefits_Result>("usp_PlannedBenefits", yearParameter, monthParameter);
        }
    
        public virtual ObjectResult<usp_PlannedBenefitsPerSaison_Result> usp_PlannedBenefitsPerSaison(Nullable<int> f_officiel_id, Nullable<int> saison)
        {
            var f_officiel_idParameter = f_officiel_id.HasValue ?
                new ObjectParameter("f_officiel_id", f_officiel_id) :
                new ObjectParameter("f_officiel_id", typeof(int));
    
            var saisonParameter = saison.HasValue ?
                new ObjectParameter("saison", saison) :
                new ObjectParameter("saison", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PlannedBenefitsPerSaison_Result>("usp_PlannedBenefitsPerSaison", f_officiel_idParameter, saisonParameter);
        }
    
        public virtual ObjectResult<usp_Summary_Result> usp_Summary(Nullable<int> f_officiel_id, Nullable<int> saison)
        {
            var f_officiel_idParameter = f_officiel_id.HasValue ?
                new ObjectParameter("f_officiel_id", f_officiel_id) :
                new ObjectParameter("f_officiel_id", typeof(int));
    
            var saisonParameter = saison.HasValue ?
                new ObjectParameter("saison", saison) :
                new ObjectParameter("saison", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Summary_Result>("usp_Summary", f_officiel_idParameter, saisonParameter);
        }
    
        public virtual ObjectResult<usp_Upcomingcompetitions_Result> usp_Upcomingcompetitions()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Upcomingcompetitions_Result>("usp_Upcomingcompetitions");
        }
    }
}
